@using Microsoft.AspNetCore.Identity
@using OrchardCore.Entities
@using OrchardCore.Settings
@using OrchardCore.Users
@using OrchardCore.Users.Models
@model OrchardCore.Users.ViewModels.LoginViewModel
@inject SignInManager<IUser> SignInManager
@inject ISiteService SiteService
@inject UserManager<IUser> UserManager;
@{
    ViewLayout = "Layout__Login";

    var userCanRegister = (await SiteService.GetSiteSettingsAsync()).As<RegistrationSettings>().UsersCanRegister == UserRegistrationType.AllowRegistration;
    var allowResetPassword = (await SiteService.GetSiteSettingsAsync()).As<ResetPasswordSettings>().AllowResetPassword;
    var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
    var disableLocalLogin = (await SiteService.GetSiteSettingsAsync()).As<LoginSettings>().DisableLocalLogin;
}

<style asp-name="font-awesome" version="5"></style>

<div class="row">
    @if (!disableLocalLogin)
    {
        <div class="container mx-auto">
            <div class="row pb-2 mt-4">
                <div class="col-4 col-md-3 offset-md-2">
                    <a href="/" class="content-el">
                        <img src="/media/site/ered_logo.png" class="img-fluid" alt="" title="">
                    </a>
                    <a href="/en" class="content-en d-none">
                        <img src="/media/site/ered_logo.png" class="img-fluid" alt="" title="">
                    </a>                    
                </div>
                <div class="col-8 col-md-5 text-right">
                    <a href="#" class="content-el switch-content"><img src="/media/site/en_.png" title="en" alt="en flag"></a>
                    <a href="#" class="content-en d-none switch-content"><img src="/media/site/el_.png" title="el" alt="el flag"></a>
                </div>               
            </div>
            <div class="row">
                <div class="col-md-8 offset-md-2 border-bottom"></div>
            </div>
            <div class="row mt-4">
                <div class="col-md-5 offset-md-2">
                    <div class="card mb-4 shadow-sm">
                        <div class="card-header">
                            <h5 class="my-0 font-weight-normal g-book content-el">Είσοδος</h5>
                            <h5 class="my-0 font-weight-normal g-book content-en d-none">Login</h5>
                        </div>
                        <div class="card-body">
                            <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="auth-form">
                                <div asp-validation-summary="All" class="text-danger"></div>
                                <div class="form-group">
                                    <label asp-for="UserName">@T["Username or email address"]</label>
                                    <input asp-for="UserName" class="form-control" autofocus tabindex="1" />
                                    <span asp-validation-for="UserName" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Password">
                                        @T["Password"]
                                        @if (allowResetPassword)
                                        {
                                            <a asp-controller="ResetPassword" asp-action="ForgotPassword" class="label-link small pl-5 text-muted content-el">Ξεχάσατε τον κωδικό σας?</a>
                                            <a asp-controller="ResetPassword" asp-action="ForgotPassword" class="label-link small pl-5 text-muted content-en d-none">@T["Forgot your password?"]</a>
                                        }
                                    </label>
                                    <div class="input-group">
                                        <input asp-for="Password" class="form-control" tabindex="2" />
                                            <button tabindex="-1" class="btn btn-secondary" type="button" id="togglePassword"><i class="icon fa fa-eye"></i></button>
                                    </div>
                                    <span asp-validation-for="Password" class="text-danger"></span>
                                </div>
                                <div class="form-group custom-control custom-checkbox">
                                    <input asp-for="RememberMe" class="custom-control-input" tabindex="3">
                                    <label asp-for="RememberMe" class="custom-control-label content-el">Να με θυμάσαι</label>
                                    <label asp-for="RememberMe" class="custom-control-label content-en d-none">@T["Remember me"]</label>
                                </div>
                                @await RenderSectionAsync("AfterLogin", required: false)
                                <button type="submit" class="btn btn-outline-danger" tabindex="4">@T["Log in"]</button>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="content-el">
                        <div class="card mb-4 shadow-sm">
                            <div class="card-header text-white bg-danger">
                                <h5 class="my-0 font-weight-normal g-book">Εγγραφή</h5>
                            </div>
                            <div class="card-body">
                                <p class="text-muted">Εγγραφή νέου συνδρομητή</p>
                                <a class="btn btn-outline-danger" href="/register">Εγγραφή</a>
                            </div>
                        </div>
                    </div>
                    <div class="content-en d-none">
                        <div class="card mb-4 shadow-sm">
                            <div class="card-header text-white bg-danger">
                                <h5 class="my-0 font-weight-normal g-book">Register</h5>
                            </div>
                            <div class="card-body">
                                <p class="text-muted">New Subscriber</p>
                                <a class="btn btn-outline-danger" href="/register">Register</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (loginProviders.Count > 0)
    {
        <div class="col-md-6 @(disableLocalLogin ? "offset-md-3" : String.Empty)">
            <section>
                <h4>@T["Use another service to log in"]</h4>
                <hr />
                <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal no-multisubmit">
                    <div>
                        <p>
                            @foreach (var provider in loginProviders)
                            {
                                <button type="submit" class="btn btn-primary @(disableLocalLogin ? "w-100" : String.Empty)" name="provider" value="@provider.Name" title="@T["Log in using your {0} account", provider.DisplayName]">@provider.DisplayName</button>
                                @if (disableLocalLogin)
                                {
                                    <br />
                                }
                            }
                        </p>
                    </div>
                </form>
            </section>
        </div>
    }
</div>
<script at="Foot">
    togglePassword = document.querySelector('#togglePassword');
    password = document.querySelector('#Password');

    togglePassword.addEventListener('click', function (e) {
        @* toggle the type attribute *@
        type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);

        @* toggle the eye slash icon *@
        icon = this.getElementsByClassName('icon')[0];
        if (icon.getAttribute('data-icon')){ @* if the icon is rendered as a svg *@
            type === 'password' ? icon.setAttribute('data-icon', 'eye') : icon.setAttribute('data-icon', 'eye-slash');
        }
        else{ @* if the icon is still a <i> element *@
            type === 'password' ? icon.classList.remove('fa-eye-slash') : icon.classList.remove('fa-eye');
            type === 'password' ? icon.classList.add('fa-eye') : icon.classList.add('fa-eye-slash');
        }
    });
</script>
